/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RewardPoolProxy,
  RewardPoolProxyInterface,
} from "../RewardPoolProxy";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chiId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "AddRewardPool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chiId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "ProxyReloadRewardPool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chiId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "RemoveRewardPool",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chiId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "addRewardPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chiId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "modifyRewardPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chiId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "proxyReloadRewardPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chiId",
        type: "uint256",
      },
    ],
    name: "removeRewardPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600061001b61006a565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061006e565b3390565b6107478061007d6000396000f3fe608060405234801561001057600080fd5b506004361061006d5760003560e01c80634927b690146100725780634fb8ed9b14610087578063715018a61461009a5780638da5cb5b146100a2578063e77d5c61146100c0578063ea314d0b146100d3578063f2fde38b146100e6575b600080fd5b61008561008036600461063d565b6100f9565b005b610085610095366004610625565b6101b6565b6100856102be565b6100aa61036a565b6040516100b79190610668565b60405180910390f35b6100856100ce36600461063d565b610379565b6100856100e136600461063d565b610469565b6100856100f4366004610604565b6104e2565b6000828152600160205260409020546001600160a01b031680156101b1576040516321f4437760e01b81526001600160a01b038216906321f4437790610143908590600401610668565b600060405180830381600087803b15801561015d57600080fd5b505af1158015610171573d6000803e3d6000fd5b505050507fbd230901116b07eecb127bcee9147f0746e83d3e3d59244cb247febbe0c100b48382846040516101a8939291906106d5565b60405180910390a15b505050565b6101be6105e4565b6001600160a01b03166101cf61036a565b6001600160a01b031614610218576040805162461bcd60e51b8152602060048201819052602482015260008051602061071b833981519152604482015290519081900360640190fd5b6000818152600160205260409020546001600160a01b03166102555760405162461bcd60e51b815260040161024c9061069c565b60405180910390fd5b6000818152600160205260409081902080546001600160a01b0319811690915590516001600160a01b03909116907f56304192e065d146ac55365968c386fbdd8eee45fdfbc6fa2b1c7cfdafe1dace906102b290849084906106be565b60405180910390a15050565b6102c66105e4565b6001600160a01b03166102d761036a565b6001600160a01b031614610320576040805162461bcd60e51b8152602060048201819052602482015260008051602061071b833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6103816105e4565b6001600160a01b031661039261036a565b6001600160a01b0316146103db576040805162461bcd60e51b8152602060048201819052602482015260008051602061071b833981519152604482015290519081900360640190fd5b6000828152600160205260409020546001600160a01b0316156104105760405162461bcd60e51b815260040161024c9061067c565b6000828152600160205260409081902080546001600160a01b0319166001600160a01b038416179055517f11d2a126559278ce30f80362994e36e66592150ab2269c07e7bdd2cbfc3c793c906102b290849084906106be565b6104716105e4565b6001600160a01b031661048261036a565b6001600160a01b0316146104cb576040805162461bcd60e51b8152602060048201819052602482015260008051602061071b833981519152604482015290519081900360640190fd5b6104d4826101b6565b6104de8282610379565b5050565b6104ea6105e4565b6001600160a01b03166104fb61036a565b6001600160a01b031614610544576040805162461bcd60e51b8152602060048201819052602482015260008051602061071b833981519152604482015290519081900360640190fd5b6001600160a01b0381166105895760405162461bcd60e51b81526004018080602001828103825260268152602001806106f56026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b80356001600160a01b03811681146105ff57600080fd5b919050565b600060208284031215610615578081fd5b61061e826105e8565b9392505050565b600060208284031215610636578081fd5b5035919050565b6000806040838503121561064f578081fd5b8235915061065f602084016105e8565b90509250929050565b6001600160a01b0391909116815260200190565b60208082526006908201526565786973747360d01b604082015260600190565b6020808252600890820152671b9bdd195e1a5cdd60c21b604082015260600190565b9182526001600160a01b0316602082015260400190565b9283526001600160a01b0391821660208401521660408201526060019056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a164736f6c6343000706000a";

export class RewardPoolProxy__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RewardPoolProxy> {
    return super.deploy(overrides || {}) as Promise<RewardPoolProxy>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RewardPoolProxy {
    return super.attach(address) as RewardPoolProxy;
  }
  connect(signer: Signer): RewardPoolProxy__factory {
    return super.connect(signer) as RewardPoolProxy__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RewardPoolProxyInterface {
    return new utils.Interface(_abi) as RewardPoolProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RewardPoolProxy {
    return new Contract(address, _abi, signerOrProvider) as RewardPoolProxy;
  }
}
