/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC721Upgradeable,
  ERC721UpgradeableInterface,
} from "../ERC721Upgradeable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611941806100206000396000f3fe608060405234801561001057600080fd5b50600436106100eb5760003560e01c80634f6ccce7116100925780634f6ccce7146102c15780636352211e146102de5780636c0360eb146102fb57806370a082311461030357806395d89b4114610329578063a22cb46514610331578063b88d4fde1461035f578063c87b56dd14610423578063e985e9c514610440576100eb565b806301ffc9a7146100f057806306fdde031461012b578063081812fc146101a8578063095ea7b3146101e157806318160ddd1461020f57806323b872dd146102295780632f745c591461025f57806342842e0e1461028b575b600080fd5b6101176004803603602081101561010657600080fd5b50356001600160e01b03191661046e565b604080519115158252519081900360200190f35b610133610491565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561016d578181015183820152602001610155565b50505050905090810190601f16801561019a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101c5600480360360208110156101be57600080fd5b5035610527565b604080516001600160a01b039092168252519081900360200190f35b61020d600480360360408110156101f757600080fd5b506001600160a01b038135169060200135610589565b005b610217610664565b60408051918252519081900360200190f35b61020d6004803603606081101561023f57600080fd5b506001600160a01b03813581169160208101359091169060400135610675565b6102176004803603604081101561027557600080fd5b506001600160a01b0381351690602001356106cc565b61020d600480360360608110156102a157600080fd5b506001600160a01b038135811691602081013590911690604001356106f7565b610217600480360360208110156102d757600080fd5b5035610712565b6101c5600480360360208110156102f457600080fd5b5035610728565b610133610750565b6102176004803603602081101561031957600080fd5b50356001600160a01b03166107b1565b610133610819565b61020d6004803603604081101561034757600080fd5b506001600160a01b038135169060200135151561087a565b61020d6004803603608081101561037557600080fd5b6001600160a01b03823581169260208101359091169160408201359190810190608081016060820135600160201b8111156103af57600080fd5b8201836020820111156103c157600080fd5b803590602001918460018302840111600160201b831117156103e257600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061097b945050505050565b6101336004803603602081101561043957600080fd5b50356109d9565b6101176004803603604081101561045657600080fd5b506001600160a01b0381358116916020013516610c5a565b6001600160e01b0319811660009081526033602052604090205460ff165b919050565b606a8054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561051d5780601f106104f25761010080835404028352916020019161051d565b820191906000526020600020905b81548152906001019060200180831161050057829003601f168201915b5050505050905090565b600061053282610c88565b61056d5760405162461bcd60e51b815260040180806020018281038252602c81526020018061185f602c913960400191505060405180910390fd5b506000908152606860205260409020546001600160a01b031690565b600061059482610728565b9050806001600160a01b0316836001600160a01b031614156105e75760405162461bcd60e51b81526004018080602001828103825260218152602001806118e36021913960400191505060405180910390fd5b806001600160a01b03166105f9610c95565b6001600160a01b0316148061061a575061061a81610615610c95565b610c5a565b6106555760405162461bcd60e51b81526004018080602001828103825260388152602001806117b26038913960400191505060405180910390fd5b61065f8383610c99565b505050565b60006106706066610d07565b905090565b610686610680610c95565b82610d12565b6106c15760405162461bcd60e51b81526004018080602001828103825260318152602001806119046031913960400191505060405180910390fd5b61065f838383610db6565b6001600160a01b03821660009081526065602052604081206106ee9083610f02565b90505b92915050565b61065f8383836040518060200160405280600081525061097b565b600080610720606684610f0e565b509392505050565b60006106f1826040518060600160405280602981526020016118146029913960669190610f2a565b606d8054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561051d5780601f106104f25761010080835404028352916020019161051d565b60006001600160a01b0382166107f85760405162461bcd60e51b815260040180806020018281038252602a8152602001806117ea602a913960400191505060405180910390fd5b6001600160a01b03821660009081526065602052604090206106f190610d07565b606b8054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561051d5780601f106104f25761010080835404028352916020019161051d565b610882610c95565b6001600160a01b0316826001600160a01b031614156108e4576040805162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b604482015290519081900360640190fd5b80606960006108f1610c95565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155610935610c95565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b61098c610986610c95565b83610d12565b6109c75760405162461bcd60e51b81526004018080602001828103825260318152602001806119046031913960400191505060405180910390fd5b6109d384848484610f41565b50505050565b60606109e482610c88565b610a1f5760405162461bcd60e51b815260040180806020018281038252602f8152602001806118b4602f913960400191505060405180910390fd5b6000828152606c602090815260408083208054825160026001831615610100026000190190921691909104601f810185900485028201850190935282815292909190830182828015610ab25780601f10610a8757610100808354040283529160200191610ab2565b820191906000526020600020905b815481529060010190602001808311610a9557829003601f168201915b505050505090506000610ac3610750565b9050805160001415610ad75750905061048c565b815115610b985780826040516020018083805190602001908083835b60208310610b125780518252601f199092019160209182019101610af3565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b60208310610b5a5780518252601f199092019160209182019101610b3b565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529250505061048c565b80610ba285610f93565b6040516020018083805190602001908083835b60208310610bd45780518252601f199092019160209182019101610bb5565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b60208310610c1c5780518252601f199092019160209182019101610bfd565b6001836020036101000a0380198251168184511680821785525050505050509050019250505060405160208183030381529060405292505050919050565b6001600160a01b03918216600090815260696020908152604080832093909416825291909152205460ff1690565b60006106f160668361106e565b3390565b600081815260686020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610cce82610728565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006106f18261107a565b6000610d1d82610c88565b610d585760405162461bcd60e51b815260040180806020018281038252602c815260200180611786602c913960400191505060405180910390fd5b6000610d6383610728565b9050806001600160a01b0316846001600160a01b03161480610d9e5750836001600160a01b0316610d9384610527565b6001600160a01b0316145b80610dae5750610dae8185610c5a565b949350505050565b826001600160a01b0316610dc982610728565b6001600160a01b031614610e0e5760405162461bcd60e51b815260040180806020018281038252602981526020018061188b6029913960400191505060405180910390fd5b6001600160a01b038216610e535760405162461bcd60e51b81526004018080602001828103825260248152602001806117626024913960400191505060405180910390fd5b610e5e83838361065f565b610e69600082610c99565b6001600160a01b0383166000908152606560205260409020610e8b908261107e565b506001600160a01b0382166000908152606560205260409020610eae908261108a565b50610ebb60668284611096565b5080826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006106ee83836110ac565b6000808080610f1d8686611110565b9097909650945050505050565b6000610f3784848461118b565b90505b9392505050565b610f4c848484610db6565b610f5884848484611255565b6109d35760405162461bcd60e51b81526004018080602001828103825260328152602001806117306032913960400191505060405180910390fd5b606081610fb857506040805180820190915260018152600360fc1b602082015261048c565b8160005b8115610fd057600101600a82049150610fbc565b60008167ffffffffffffffff81118015610fe957600080fd5b506040519080825280601f01601f191660200182016040528015611014576020820181803683370190505b50859350905060001982015b831561106557600a840660300160f81b8282806001900393508151811061104357fe5b60200101906001600160f81b031916908160001a905350600a84049350611020565b50949350505050565b60006106ee83836113bd565b5490565b60006106ee83836113d5565b60006106ee838361149b565b6000610f3784846001600160a01b0385166114e5565b815460009082106110ee5760405162461bcd60e51b815260040180806020018281038252602281526020018061170e6022913960400191505060405180910390fd5b8260000182815481106110fd57fe5b9060005260206000200154905092915050565b8154600090819083106111545760405162461bcd60e51b815260040180806020018281038252602281526020018061183d6022913960400191505060405180910390fd5b600084600001848154811061116557fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b600082815260018401602052604081205482816112265760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156111eb5781810151838201526020016111d3565b50505050905090810190601f1680156112185780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5084600001600182038154811061123957fe5b9060005260206000209060020201600101549150509392505050565b6000611269846001600160a01b031661157c565b61127557506001610dae565b6000611383630a85bd0160e11b61128a610c95565b88878760405160240180856001600160a01b03168152602001846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156112f15781810151838201526020016112d9565b50505050905090810190601f16801561131e5780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050604051806060016040528060328152602001611730603291396001600160a01b0388169190611582565b9050600081806020019051602081101561139c57600080fd5b50516001600160e01b031916630a85bd0160e11b1492505050949350505050565b60009081526001919091016020526040902054151590565b60008181526001830160205260408120548015611491578354600019808301919081019060009087908390811061140857fe5b906000526020600020015490508087600001848154811061142557fe5b60009182526020808320909101929092558281526001898101909252604090209084019055865487908061145557fe5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506106f1565b60009150506106f1565b60006114a783836113bd565b6114dd575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556106f1565b5060006106f1565b60008281526001840160205260408120548061154a575050604080518082018252838152602080820184815286546001818101895560008981528481209551600290930290950191825591519082015586548684528188019092529290912055610f3a565b8285600001600183038154811061155d57fe5b9060005260206000209060020201600101819055506000915050610f3a565b3b151590565b6060610f378484600085856115968561157c565b6115e7576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b602083106116255780518252601f199092019160209182019101611606565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611687576040519150601f19603f3d011682016040523d82523d6000602084013e61168c565b606091505b509150915061169c8282866116a7565b979650505050505050565b606083156116b6575081610f3a565b8251156116c65782518084602001fd5b60405162461bcd60e51b81526020600482018181528451602484015284518593919283926044019190850190808383600083156111eb5781810151838201526020016111d356fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a164736f6c6343000706000a";

export class ERC721Upgradeable__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721Upgradeable> {
    return super.deploy(overrides || {}) as Promise<ERC721Upgradeable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC721Upgradeable {
    return super.attach(address) as ERC721Upgradeable;
  }
  connect(signer: Signer): ERC721Upgradeable__factory {
    return super.connect(signer) as ERC721Upgradeable__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721UpgradeableInterface {
    return new utils.Interface(_abi) as ERC721UpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Upgradeable {
    return new Contract(address, _abi, signerOrProvider) as ERC721Upgradeable;
  }
}
