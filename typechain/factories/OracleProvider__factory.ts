/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OracleProvider,
  OracleProviderInterface,
} from "../OracleProvider";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "base",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "quote",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "registry",
        type: "address",
      },
    ],
    name: "AddOracle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "USDUnderlying",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "base",
        type: "address",
      },
      {
        internalType: "address",
        name: "quote",
        type: "address",
      },
      {
        internalType: "address",
        name: "registry",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    name: "addOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
    ],
    name: "getPairUSDPrice",
    outputs: [
      {
        internalType: "int256",
        name: "price0",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "price1",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getUSDPrice",
    outputs: [
      {
        internalType: "int256",
        name: "price",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "base",
            type: "address",
          },
          {
            internalType: "address",
            name: "quote",
            type: "address",
          },
          {
            internalType: "address",
            name: "registry",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "decimals",
            type: "uint256",
          },
        ],
        internalType: "struct OracleProvider.InitParam[]",
        name: "params",
        type: "tuple[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "oracles",
    outputs: [
      {
        internalType: "address",
        name: "base",
        type: "address",
      },
      {
        internalType: "address",
        name: "quote",
        type: "address",
      },
      {
        internalType: "address",
        name: "registry",
        type: "address",
      },
      {
        internalType: "bool",
        name: "available",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611162806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806372471e1f1161006657806372471e1f146101055780638b2f0f4f146101185780638da5cb5b14610138578063d325685f14610140578063f2fde38b1461015357610093565b806303f93e5f1461009857806352a03c03146100c25780636354d06a146100e6578063715018a6146100fb575b600080fd5b6100ab6100a6366004610f01565b610166565b6040516100b99291906110af565b60405180910390f35b6100d56100d0366004610f01565b610186565b6040516100b9959493929190611072565b6100ee6101d2565b6040516100b99190611033565b6101036101d8565b005b610103610113366004610f74565b610296565b61012b610126366004610ee7565b610506565b6040516100b991906110a6565b6100ee6108a9565b61010361014e366004610f2a565b6108b8565b610103610161366004610ee7565b610a6e565b60008061017284610506565b915061017d83610506565b90509250929050565b606560209081526000928352604080842090915290825290208054600182015460028301546003909301546001600160a01b039283169391831692821691600160a01b900460ff169085565b61034890565b6101e0610b83565b6001600160a01b03166101f16108a9565b6001600160a01b03161461024c576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b600054610100900460ff16806102af57506102af610b87565b806102bd575060005460ff16155b6102f85760405162461bcd60e51b815260040180806020018281038252602e815260200180611107602e913960400191505060405180910390fd5b600054610100900460ff16158015610323576000805460ff1961ff0019909116610100171660011790555b60005b828110156104e6576040518060a0016040528085858481811061034557fe5b61035b9260206080909202019081019150610ee7565b6001600160a01b0316815260200185858481811061037557fe5b905060800201602001602081019061038d9190610ee7565b6001600160a01b031681526020018585848181106103a757fe5b90506080020160400160208101906103bf9190610ee7565b6001600160a01b03168152600160208201526040018585848181106103e057fe5b90506080020160600135815250606560008686858181106103fd57fe5b6104139260206080909202019081019150610ee7565b6001600160a01b03166001600160a01b03168152602001908152602001600020600086868581811061044157fe5b90506080020160200160208101906104599190610ee7565b6001600160a01b0390811682526020808301939093526040918201600020845181549083166001600160a01b03199182161782559385015160018083018054928516928716929092179091559285015160028201805460608801511515600160a01b0260ff60a01b1993909516961695909517169190911790925560809092015160039091015501610326565b506104ef610b98565b8015610501576000805461ff00191690555b505050565b6001600160a01b03818116600090815260656020908152604080832061034884528252808320815160a081018352815486168152600180830154871694820194909452600282015495861692810192909252600160a01b90940460ff161515606082018190526003909401546080820152919214156106015780604001516001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156105bc57600080fd5b505afa1580156105d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f49190610fe4565b509194506108a392505050565b6001600160a01b03808416600090815260656020908152604080832073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee84528252808320815160a08082018452825487168252600183015487168286015260028301548088168386015260ff600160a01b918290048116151560608086019182526003909601546080808701919091526103489099527f257405f99fe2d6fe0ce719600dcd9061285695d9bfa0763a142fa64f3756009f8852865193840187527f5bdf3a1bad7a7b4fae57f8d7762a9cfaa4239442c7e10ae3664076d953189cf8548a1684527f5bdf3a1bad7a7b4fae57f8d7762a9cfaa4239442c7e10ae3664076d953189cf9548a16978401979097527f5bdf3a1bad7a7b4fae57f8d7762a9cfaa4239442c7e10ae3664076d953189cfa54988916958301959095529096049092161515908501527f5bdf3a1bad7a7b4fae57f8d7762a9cfaa4239442c7e10ae3664076d953189cfb5492840192909252519091908015610778575080606001515b156108a057600082604001516001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156107bc57600080fd5b505afa1580156107d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f49190610fe4565b505050915050600082604001516001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561083957600080fd5b505afa15801561084d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108719190610fe4565b50505091505061089b816108958660800151600a0a85610c4a90919063ffffffff16565b90610cb3565b955050505b50505b50919050565b6033546001600160a01b031690565b6108c0610b83565b6001600160a01b03166108d16108a9565b6001600160a01b03161461092c576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0384811660009081526065602090815260408083208785168452909152902060020154161561097d5760405162461bcd60e51b8152600401610974906110bd565b60405180910390fd5b6040805160a0810182526001600160a01b038087168083528682166020808501828152888516868801908152600160608801818152608089018b81526000978852606586528a88209688529590945294889020965187549087166001600160a01b03199182161788559151948701805495871695831695909517909455925160028601805492511515600160a01b0260ff60a01b199290961692909416919091171692909217905551600390910155517f151e9b5c329cba5a1f5358bcc3a831cd16cef0de3bebd377b02f41ce64d442fe90610a60903390879087908790611047565b60405180910390a150505050565b610a76610b83565b6001600160a01b0316610a876108a9565b6001600160a01b031614610ae2576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116610b275760405162461bcd60e51b81526004018080602001828103825260268152602001806110e16026913960400191505060405180910390fd5b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b6000610b9230610d13565b15905090565b600054610100900460ff1680610bb15750610bb1610b87565b80610bbf575060005460ff16155b610bfa5760405162461bcd60e51b815260040180806020018281038252602e815260200180611107602e913960400191505060405180910390fd5b600054610100900460ff16158015610c25576000805460ff1961ff0019909116610100171660011790555b610c2d610d1d565b610c35610dbd565b8015610c47576000805461ff00191690555b50565b6000808211610ca0576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b818381610ca957fe5b0490505b92915050565b600082610cc257506000610cad565b82820282848281610ccf57fe5b0414610d0c5760405162461bcd60e51b81526004018080602001828103825260218152602001806111356021913960400191505060405180910390fd5b9392505050565b803b15155b919050565b600054610100900460ff1680610d365750610d36610b87565b80610d44575060005460ff16155b610d7f5760405162461bcd60e51b815260040180806020018281038252602e815260200180611107602e913960400191505060405180910390fd5b600054610100900460ff16158015610c35576000805460ff1961ff0019909116610100171660011790558015610c47576000805461ff001916905550565b600054610100900460ff1680610dd65750610dd6610b87565b80610de4575060005460ff16155b610e1f5760405162461bcd60e51b815260040180806020018281038252602e815260200180611107602e913960400191505060405180910390fd5b600054610100900460ff16158015610e4a576000805460ff1961ff0019909116610100171660011790555b6000610e54610b83565b603380546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3508015610c47576000805461ff001916905550565b80356001600160a01b0381168114610d1857600080fd5b805169ffffffffffffffffffff81168114610d1857600080fd5b600060208284031215610ef8578081fd5b610d0c82610eb6565b60008060408385031215610f13578081fd5b610f1c83610eb6565b915061017d60208401610eb6565b60008060008060808587031215610f3f578182fd5b610f4885610eb6565b9350610f5660208601610eb6565b9250610f6460408601610eb6565b9396929550929360600135925050565b60008060208385031215610f86578182fd5b823567ffffffffffffffff80821115610f9d578384fd5b818501915085601f830112610fb0578384fd5b813581811115610fbe578485fd5b866020608083028501011115610fd2578485fd5b60209290920196919550909350505050565b600080600080600060a08688031215610ffb578081fd5b61100486610ecd565b945060208601519350604086015192506060860151915061102760808701610ecd565b90509295509295909350565b6001600160a01b0391909116815260200190565b6001600160a01b03948516815292841660208401529083166040830152909116606082015260800190565b6001600160a01b03958616815293851660208501529190931660408301529115156060820152608081019190915260a00190565b90815260200190565b918252602082015260400190565b6020808252600990820152686475706c696361746560b81b60408201526060019056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a164736f6c6343000706000a";

export class OracleProvider__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OracleProvider> {
    return super.deploy(overrides || {}) as Promise<OracleProvider>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OracleProvider {
    return super.attach(address) as OracleProvider;
  }
  connect(signer: Signer): OracleProvider__factory {
    return super.connect(signer) as OracleProvider__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OracleProviderInterface {
    return new utils.Interface(_abi) as OracleProviderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OracleProvider {
    return new Contract(address, _abi, signerOrProvider) as OracleProvider;
  }
}
