/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Yin, YinInterface } from "../Yin";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maximumTotalSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maximumTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "trackedTotalySupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620012c3380380620012c3833981810160405260208110156200003757600080fd5b5051604080518082018252600b81526a59494e2046696e616e636560a81b602082810191825283518085019094526003808552622ca4a760e91b91850191909152825192939262000089929062000123565b5080516200009f90600490602084019062000123565b50506005805460ff19166012179055506000620000bb6200011f565b60058054610100600160a81b0319166101006001600160a01b03841690810291909117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506006556000600755620001cf565b3390565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200015b5760008555620001a6565b82601f106200017657805160ff1916838001178555620001a6565b82800160010185558215620001a6579182015b82811115620001a657825182559160200191906001019062000189565b50620001b4929150620001b8565b5090565b5b80821115620001b45760008155600101620001b9565b6110e480620001df6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a25780639dc29fac116100715780639dc29fac1461030a578063a457c2d714610336578063a9059cbb14610362578063dd62ed3e1461038e578063f2fde38b146103bc57610116565b806370a08231146102b0578063715018a6146102d65780638da5cb5b146102de57806395d89b411461030257610116565b806323b872dd116100e957806323b872dd146101fa578063313ce56714610230578063395093511461024e57806340c10f191461027a578063444f2316146102a857610116565b806306fdde031461011b578063095ea7b3146101985780631526757b146101d857806318160ddd146101f2575b600080fd5b6101236103e2565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561015d578181015183820152602001610145565b50505050905090810190601f16801561018a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101c4600480360360408110156101ae57600080fd5b506001600160a01b038135169060200135610478565b604080519115158252519081900360200190f35b6101e0610495565b60408051918252519081900360200190f35b6101e061049b565b6101c46004803603606081101561021057600080fd5b506001600160a01b038135811691602081013590911690604001356104a1565b610238610528565b6040805160ff9092168252519081900360200190f35b6101c46004803603604081101561026457600080fd5b506001600160a01b038135169060200135610531565b6102a66004803603604081101561029057600080fd5b506001600160a01b03813516906020013561057f565b005b6101e0610653565b6101e0600480360360208110156102c657600080fd5b50356001600160a01b0316610659565b6102a6610674565b6102e6610726565b604080516001600160a01b039092168252519081900360200190f35b61012361073a565b6102a66004803603604081101561032057600080fd5b506001600160a01b03813516906020013561079b565b6101c46004803603604081101561034c57600080fd5b506001600160a01b038135169060200135610807565b6101c46004803603604081101561037857600080fd5b506001600160a01b03813516906020013561086f565b6101e0600480360360408110156103a457600080fd5b506001600160a01b0381358116916020013516610883565b6102a6600480360360208110156103d257600080fd5b50356001600160a01b03166108ae565b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561046e5780601f106104435761010080835404028352916020019161046e565b820191906000526020600020905b81548152906001019060200180831161045157829003601f168201915b5050505050905090565b600061048c6104856109bc565b84846109c0565b50600192915050565b60075481565b60025490565b60006104ae848484610aac565b61051e846104ba6109bc565b61051985604051806060016040528060288152602001611001602891396001600160a01b038a166000908152600160205260408120906104f86109bc565b6001600160a01b031681526020810191909152604001600020549190610c07565b6109c0565b5060019392505050565b60055460ff1690565b600061048c61053e6109bc565b84610519856001600061054f6109bc565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610c9e565b6105876109bc565b6001600160a01b0316610598610726565b6001600160a01b0316146105e1576040805162461bcd60e51b81526020600482018190526024820152600080516020611029833981519152604482015290519081900360640190fd5b6006546007546105f19083610c9e565b1115610635576040805162461bcd60e51b815260206004820152600e60248201526d1b585e1a5b5d5b481b5a5b9d195960921b604482015290519081900360640190fd5b6007546106429082610c9e565b60075561064f8282610cff565b5050565b60065481565b6001600160a01b031660009081526020819052604090205490565b61067c6109bc565b6001600160a01b031661068d610726565b6001600160a01b0316146106d6576040805162461bcd60e51b81526020600482018190526024820152600080516020611029833981519152604482015290519081900360640190fd5b60055460405160009161010090046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a360058054610100600160a81b0319169055565b60055461010090046001600160a01b031690565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561046e5780601f106104435761010080835404028352916020019161046e565b6107a36109bc565b6001600160a01b03166107b4610726565b6001600160a01b0316146107fd576040805162461bcd60e51b81526020600482018190526024820152600080516020611029833981519152604482015290519081900360640190fd5b61064f8282610def565b600061048c6108146109bc565b84610519856040518060600160405280602581526020016110b3602591396001600061083e6109bc565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610c07565b600061048c61087c6109bc565b8484610aac565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6108b66109bc565b6001600160a01b03166108c7610726565b6001600160a01b031614610910576040805162461bcd60e51b81526020600482018190526024820152600080516020611029833981519152604482015290519081900360640190fd5b6001600160a01b0381166109555760405162461bcd60e51b8152600401808060200182810382526026815260200180610f936026913960400191505060405180910390fd5b6005546040516001600160a01b0380841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b3390565b6001600160a01b038316610a055760405162461bcd60e51b815260040180806020018281038252602481526020018061108f6024913960400191505060405180910390fd5b6001600160a01b038216610a4a5760405162461bcd60e51b8152600401808060200182810382526022815260200180610fb96022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610af15760405162461bcd60e51b815260040180806020018281038252602581526020018061106a6025913960400191505060405180910390fd5b6001600160a01b038216610b365760405162461bcd60e51b8152600401808060200182810382526023815260200180610f4e6023913960400191505060405180910390fd5b610b41838383610eeb565b610b7e81604051806060016040528060268152602001610fdb602691396001600160a01b0386166000908152602081905260409020549190610c07565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610bad9082610c9e565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610c965760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c5b578181015183820152602001610c43565b50505050905090810190601f168015610c885780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610cf8576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610d5a576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610d6660008383610eeb565b600254610d739082610c9e565b6002556001600160a01b038216600090815260208190526040902054610d999082610c9e565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038216610e345760405162461bcd60e51b81526004018080602001828103825260218152602001806110496021913960400191505060405180910390fd5b610e4082600083610eeb565b610e7d81604051806060016040528060228152602001610f71602291396001600160a01b0385166000908152602081905260409020549190610c07565b6001600160a01b038316600090815260208190526040902055600254610ea39082610ef0565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b505050565b600082821115610f47576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b5090039056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e63654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657245524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa164736f6c6343000706000a";

export class Yin__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _maximumTotalSupply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Yin> {
    return super.deploy(_maximumTotalSupply, overrides || {}) as Promise<Yin>;
  }
  getDeployTransaction(
    _maximumTotalSupply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_maximumTotalSupply, overrides || {});
  }
  attach(address: string): Yin {
    return super.attach(address) as Yin;
  }
  connect(signer: Signer): Yin__factory {
    return super.connect(signer) as Yin__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YinInterface {
    return new utils.Interface(_abi) as YinInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Yin {
    return new Contract(address, _abi, signerOrProvider) as Yin;
  }
}
