/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Yin, YinInterface } from "../Yin";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maximumTotalSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maximumTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "trackedTotalySupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200128b3803806200128b833981810160405260208110156200003757600080fd5b5051604080518082018252600b81526a59494e2046696e616e636560a81b602082810191825283518085019094526003808552622ca4a760e91b91850191909152825192939262000089929062000123565b5080516200009f90600490602084019062000123565b50506005805460ff19166012179055506000620000bb6200011f565b60058054610100600160a81b0319166101006001600160a01b03841690810291909117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506006556000600755620001cf565b3390565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200015b5760008555620001a6565b82601f106200017657805160ff1916838001178555620001a6565b82800160010185558215620001a6579182015b82811115620001a657825182559160200191906001019062000189565b50620001b4929150620001b8565b5090565b5b80821115620001b45760008155600101620001b9565b6110ac80620001df6000396000f3fe608060405234801561001057600080fd5b50600436106100f65760003560e01c806370a082311161009257806370a0823114610290578063715018a6146102b65780638da5cb5b146102be57806395d89b41146102e25780639dc29fac146102ea578063a457c2d714610316578063a9059cbb14610342578063dd62ed3e1461036e578063f2fde38b1461039c576100f6565b806306fdde03146100fb578063095ea7b3146101785780631526757b146101b857806318160ddd146101d257806323b872dd146101da578063313ce56714610210578063395093511461022e57806340c10f191461025a578063444f231614610288575b600080fd5b6101036103c2565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561013d578181015183820152602001610125565b50505050905090810190601f16801561016a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a46004803603604081101561018e57600080fd5b506001600160a01b038135169060200135610458565b604080519115158252519081900360200190f35b6101c0610475565b60408051918252519081900360200190f35b6101c061047b565b6101a4600480360360608110156101f057600080fd5b506001600160a01b03813581169160208101359091169060400135610481565b610218610508565b6040805160ff9092168252519081900360200190f35b6101a46004803603604081101561024457600080fd5b506001600160a01b038135169060200135610511565b6102866004803603604081101561027057600080fd5b506001600160a01b03813516906020013561055f565b005b6101c0610633565b6101c0600480360360208110156102a657600080fd5b50356001600160a01b0316610639565b610286610654565b6102c6610706565b604080516001600160a01b039092168252519081900360200190f35b61010361071a565b6102866004803603604081101561030057600080fd5b506001600160a01b03813516906020013561077b565b6101a46004803603604081101561032c57600080fd5b506001600160a01b0381351690602001356107e7565b6101a46004803603604081101561035857600080fd5b506001600160a01b03813516906020013561084f565b6101c06004803603604081101561038457600080fd5b506001600160a01b0381358116916020013516610863565b610286600480360360208110156103b257600080fd5b50356001600160a01b031661088e565b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561044e5780601f106104235761010080835404028352916020019161044e565b820191906000526020600020905b81548152906001019060200180831161043157829003601f168201915b5050505050905090565b600061046c61046561099c565b84846109a0565b50600192915050565b60075481565b60025490565b600061048e848484610a8c565b6104fe8461049a61099c565b6104f985604051806060016040528060288152602001610fa9602891396001600160a01b038a166000908152600160205260408120906104d861099c565b6001600160a01b031681526020810191909152604001600020549190610bd5565b6109a0565b5060019392505050565b60055460ff1690565b600061046c61051e61099c565b846104f9856001600061052f61099c565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610c6c565b61056761099c565b6001600160a01b0316610578610706565b6001600160a01b0316146105c1576040805162461bcd60e51b81526020600482018190526024820152600080516020610fd1833981519152604482015290519081900360640190fd5b6006546007546105d19083610c6c565b1115610615576040805162461bcd60e51b815260206004820152600e60248201526d1b585e1a5b5d5b481b5a5b9d195960921b604482015290519081900360640190fd5b6007546106229082610c6c565b60075561062f8282610ccb565b5050565b60065481565b6001600160a01b031660009081526020819052604090205490565b61065c61099c565b6001600160a01b031661066d610706565b6001600160a01b0316146106b6576040805162461bcd60e51b81526020600482018190526024820152600080516020610fd1833981519152604482015290519081900360640190fd5b60055460405160009161010090046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a360058054610100600160a81b0319169055565b60055461010090046001600160a01b031690565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561044e5780601f106104235761010080835404028352916020019161044e565b61078361099c565b6001600160a01b0316610794610706565b6001600160a01b0316146107dd576040805162461bcd60e51b81526020600482018190526024820152600080516020610fd1833981519152604482015290519081900360640190fd5b61062f8282610da9565b600061046c6107f461099c565b846104f98560405180606001604052806025815260200161107b602591396001600061081e61099c565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610bd5565b600061046c61085c61099c565b8484610a8c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61089661099c565b6001600160a01b03166108a7610706565b6001600160a01b0316146108f0576040805162461bcd60e51b81526020600482018190526024820152600080516020610fd1833981519152604482015290519081900360640190fd5b6001600160a01b0381166109355760405162461bcd60e51b8152600401808060200182810382526026815260200180610f3b6026913960400191505060405180910390fd5b6005546040516001600160a01b0380841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b3390565b6001600160a01b0383166109e55760405162461bcd60e51b81526004018080602001828103825260248152602001806110576024913960400191505060405180910390fd5b6001600160a01b038216610a2a5760405162461bcd60e51b8152600401808060200182810382526022815260200180610f616022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610ad15760405162461bcd60e51b81526004018080602001828103825260258152602001806110326025913960400191505060405180910390fd5b6001600160a01b038216610b165760405162461bcd60e51b8152600401808060200182810382526023815260200180610ef66023913960400191505060405180910390fd5b610b21838383610e93565b610b5e81604051806060016040528060268152602001610f83602691396001600160a01b0386166000908152602081905260409020549190610bd5565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610b8d9082610c6c565b6001600160a01b03808416600081815260208181526040918290209490945580518581529051919392871692600080516020610ff183398151915292918290030190a3505050565b60008184841115610c645760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c29578181015183820152602001610c11565b50505050905090810190601f168015610c565780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610cc4576040805162461bcd60e51b815260206004820152601b60248201527a536166654d6174683a206164646974696f6e206f766572666c6f7760281b604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610d26576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610d3260008383610e93565b600254610d3f9082610c6c565b6002556001600160a01b038216600090815260208190526040902054610d659082610c6c565b6001600160a01b038316600081815260208181526040808320949094558351858152935192939192600080516020610ff18339815191529281900390910190a35050565b6001600160a01b038216610dee5760405162461bcd60e51b81526004018080602001828103825260218152602001806110116021913960400191505060405180910390fd5b610dfa82600083610e93565b610e3781604051806060016040528060228152602001610f19602291396001600160a01b0385166000908152602081905260409020549190610bd5565b6001600160a01b038316600090815260208190526040902055600254610e5d9082610e98565b6002556040805182815290516000916001600160a01b03851691600080516020610ff18339815191529181900360200190a35050565b505050565b600082821115610eef576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b5090039056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e63654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef45524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa164736f6c6343000706000a";

export class Yin__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _maximumTotalSupply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Yin> {
    return super.deploy(_maximumTotalSupply, overrides || {}) as Promise<Yin>;
  }
  getDeployTransaction(
    _maximumTotalSupply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_maximumTotalSupply, overrides || {});
  }
  attach(address: string): Yin {
    return super.attach(address) as Yin;
  }
  connect(signer: Signer): Yin__factory {
    return super.connect(signer) as Yin__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YinInterface {
    return new utils.Interface(_abi) as YinInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Yin {
    return new Contract(address, _abi, signerOrProvider) as Yin;
  }
}
